My project, TMDB Box office prediction deals with a predefined movie dataset that has multiple features ranging from budget, popularity, cast etc., which are used to predict the box office collection of the movie after its release. I chose to design it on a small scale as the dataset was readily available. It was not a large dataset and so I did not need to use a cluod provider for benchmarking the dataset. For the EDA, I used Python libraries - primarily Pandas and Numpy. To build the model, the baseline I used was a linear regression model. I then compared the performances of Ridge regression, Random Forest Regressor, XGBRegressor. I found the best model to be the Random Forest Regressor. I trained the model and tested it using the datasets provided on Kaggle. This model was then loaded to a pickle file. I also loaded the features that I used to train the model into another pickle file. I decided to use Flask to deploy the model as an API on a server. I chose Flask as it was simple to use and not computationally expensive. The model once deployed, takes feature values as input in JSON format and outputs the prediction in JSON format. It was tested using Postman with different values of input. 
The major expense of the system would be in deploying the on a server which needs to run throughout the day so that any user of the model can generate a prediction whenver they need it. An EC2 server on AWS costs around $2 an hour which would be the only major expense. 